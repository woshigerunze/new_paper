@startuml
actor 用户
用户 -> 订阅者模块 : 注册订阅者
订阅者模块 -> 订阅者模块 : 配置文件校验
alt 校验失败
    订阅者模块 --> 用户 : 注册失败 
else 校验成功
    activate 订阅者模块
    订阅者模块 -> 调度模块 : 注册调度任务

    activate 调度模块
    调度模块 -> 调度模块 : 生成调度任务
    return 注册调度任务成功
    deactivate 调度模块

    订阅者模块 -> 通信抽象模块 : 传送订阅者配置文件

    activate 通信抽象模块
    通信抽象模块 -> 抽象订阅类 : 创建抽象订阅类
    activate 抽象订阅类
    抽象订阅类 -> 订阅管理类 : 创建订阅管理类
    activate 订阅管理类 
    订阅管理类 -> 订阅管理类 : 创建进程间通信管理类
    订阅管理类 -> 订阅管理类 : 创建进程内通信管理类
    订阅管理类 -> 订阅管理类 : 创建网络通信管理类
    return 创建成功
    抽象订阅类 -> 抽象订阅类 : 保存订阅管理类
    return 创建成功
    deactivate 抽象订阅类

    通信抽象模块 -> 通信抽象模块 : 创建抽象订阅者配置文件
    通信抽象模块 -> 通信抽象模块 : 生成服务发现请求参数
    通信抽象模块 -> 服务发现模块 : 发出注册请求

    activate 服务发现模块
    loop 直到匹配成功
        服务发现模块 -> 服务发现模块 : 根据抽象订阅者配置文件\n匹配发布者
    end
    服务发现模块 -> 服务发现模块 : 执行回调函数
    服务发现模块 --> 通信抽象模块 -- : 注册成功
    通信抽象模块 --> 订阅者模块 -- : 注册成功
    deactivate 通信抽象模块
    订阅者模块 --> 用户: 注册成功
    activate 订阅管理类


    loop 收取消息
    订阅管理类 -> 订阅管理类 : 监听通信链路
    订阅管理类 --> 订阅者模块 : 返回最新消息
    activate 订阅者模块 #FFBBBB
    订阅者模块 -> 订阅者模块 : 将消息压入消息队列
    订阅者模块 -> 调度模块 : 发起调度
    activate 调度模块
    调度模块 -> 调度模块 : 执行调度任务
    return 调度成功
    用户 -> 订阅者模块 : 收取消息
    订阅者模块 -> 订阅者模块 : 弹出消息
    订阅者模块 --> 用户 : 消息
    end
end
@enduml