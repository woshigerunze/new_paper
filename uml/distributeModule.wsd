@startuml
' skinparam component{
'     FontSize 25
'     TitleFontSize 25
'     ArrowFontSize 25
'     InterfaceFontSize 25
'     CaptionFontSize 25
'     HeaderFontSize 25
'     LabelFontSize 25
'     DomainFontSize 25
'     PackageFontSize 25
'     ComponentFontSize 25
'     SequenceTitleFontSize 25
'     LabelFontSize 25
'     FolderFontSize 25
'     DomainFontSize 25
' }
' skinparam package{
'     FontSize 25
'     TitleFontSize 25
'     ArrowFontSize 25
'     InterfaceFontSize 25
'     CaptionFontSize 25
'     HeaderFontSize 25
'     LabelFontSize 25
'     DomainFontSize 25
'     PackageFontSize 25
'     ComponentFontSize 25
'     SequenceTitleFontSize 25
'     LabelFontSize 25
'     FolderFontSize 25
'     DomainFontSize 25
' }
package FunctionModule{
component TaskLayer{
    [TaskWrapper]
    component ScheduleLayer{
        [TaskScheduler]
    }
    component CommunicationLayer{
        [SubScriber]
        [PubLisher]
        [ServiceServer]
        [ServiceClient]
        component CommunicationAbstractLayer{
            [CommunicationAbstract]
            [PubAbstract]
            [SubAbstract]
            [ServiceAbstract]
            [ServiceDiscoveryManager]
        component CommunicationTransportLayer{
            component NetworkCommunication{
                [NetworkManager]
                [NetworkPublisher]
                [NetworkSubscriber]
            }
            component IntraProcessCommunication{
                [IntraProcessManager]
                [IntraProcessPublisher]
                [IntraProcessSubscriber]
            }
            component InterProcessCommunication{
                [InterProcessManager]
                [InterProcesPublisher]
                [InterProcessSubscriber]
            }
            component MessageEngine{
                [MessageManager]
                [Serialize]
                [Deserialize]
            }
            ' component ServiceDiscovery{
            '     [ServiceDiscoveryManager]
            ' }
        }
        }
    }
}
[TaskWrapper] ..> [TaskScheduler] : use
[TaskWrapper] ..> [SubScriber] : use
[TaskWrapper] ..> [PubLisher] : use
[TaskWrapper] ..> [ServiceServer] : use
[TaskWrapper] ..> [ServiceClient] : use

[SubScriber] ..> [CommunicationAbstract] : use
[PubLisher] ..> [CommunicationAbstract] : use
[ServiceServer] ..> [CommunicationAbstract] : use
[ServiceClient] ..> [CommunicationAbstract] : use

[CommunicationAbstract] ..> [PubAbstract] : create
[CommunicationAbstract] ..> [SubAbstract] : create
[CommunicationAbstract] ..> [ServiceAbstract] : create
[CommunicationAbstract] ..> [ServiceDiscoveryManager] : create

[PubAbstract] ..> [NetworkManager] : create
[PubAbstract] ..> [IntraProcessManager] : create
[PubAbstract] ..> [InterProcessManager] : create

[SubAbstract] ..> [NetworkManager] : create
[SubAbstract] ..> [IntraProcessManager] : create
[SubAbstract] ..> [InterProcessManager] : create

[NetworkManager] ..> [NetworkPublisher] : create
[NetworkManager] ..> [NetworkSubscriber] : create
[IntraProcessManager] ..> [IntraProcessPublisher] : create
[IntraProcessManager] ..> [IntraProcessSubscriber] : create
[InterProcessManager] ..> [InterProcesPublisher] : create
[InterProcessManager] ..> [InterProcessSubscriber] : create

[NetworkPublisher] ..down-> [MessageManager] : use
[NetworkSubscriber] ..down-> [MessageManager] : use
[IntraProcessPublisher] ..down-> [MessageManager] : use
[IntraProcessSubscriber] ..down-> [MessageManager] : use
[InterProcesPublisher] ..down-> [MessageManager] : use
[InterProcessSubscriber] ..down-> [MessageManager] : use
[MessageManager] ..> [Deserialize] : use
[MessageManager] ..> [Serialize] : use
}
' FunctionModule -up-  () "CPP API"
' CPPUserInterface ..> () "CPP API" : use
@enduml