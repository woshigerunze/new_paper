class CommunicationAbstract{
    -vector<PublisherInfo>
    -vector<SubscriberInfo>
    -vector<ServiceServerInfo>
    -vector<ServiceClientInfo>
    --
    +PubAbstract* create_publisher(PublisherConfig)
    +bool create_subscriber(SubscriberConfig)
    +bool create_service_server(ServiceServerConfig)
    +bool create_service_client(ServiceClientConfig)
    +bool delete_publisher(PublisherConfig)
    +bool delete_subscriber(SubscriberConfig)
    +bool delete_service_server(ServiceServerConfig)
    +bool delete_service_client(ServiceClientConfig)
    +bool modify_publisher_domain(PublisherConfig)
    +bool modify_subscriber_domain(SubscriberConfig)
    +bool modify_service_server_domain(ServiceServerConfig)
    +bol modify_service_client_domain(ServiceClientConfig)
    +bool change_communication_mode(SubscriberConfig)
    +query_publishers_info(QueryType)
    +query_subscribers_info(QueryType)
    +query_service_info(QueryType)
    +bool is_service_available(ServiceName)
    +Result call_service(ServiceName)
    +bool publish(PubAbstract*,Message)
}


class PubAbstract{
    - NetWorkManager
    - IntraProcessManager
    - InterProcessManager
    +bool publish(Message)
    +ConnectURL make_communication_connection(SubscriberNetInfo)
}

class SubAbstract{
    - NetWorkManager
    - IntraProcessManager
    - InterProcessManager
    - void make_communication_connection(ConnectURL)
}

class ServiceAbstract{
    - rpc_server
    - rpc_client
    +bool bind_service(ServiceServerConfig)
    +bool unbind_service(ServiceServerConfig)
    +Result call_service(ServiceName)
    +bool lookup_for_service(ServiceName)
}

class ServiceDiscoveryManager{
    +bool create_publisher(DisvoveryParam)
    +bool create_subscriber(DisvoveryParam)
    +bool create_service_server(DisvoveryParam)
    +bool create_service_client(DisvoveryParam)
    +bool delete_publisher(DisvoveryParam)
    +bool delete_subscriber(DisvoveryParam)
    +bool delete_service_server(DisvoveryParam)
    +bool delete_service_client(DisvoveryParam)
    +bool modify_publisher_domain(DisvoveryParam)
    +bool modify_subscriber_domain(DisvoveryParam)
    +bool modify_service_server_domain(DisvoveryParam)
    +bool modify_service_client_domain(DisvoveryParam)
    +bool change_communication_mode(DisvoveryParam)
    +vector<PublisherInfo> query_publishers_info(QueryType)
    +vector<SubscriberInfo>boolquery_subscribers_info(QueryType)
    +vector<ServerInfo>query_service_info(QueryType)
    +ServiceInfo lookup_for_service(ServiceName)
    +bool is_service_available(ServiceName)
    - rpc_query()
}

class Util{
    + string get_ipAdress()
    + int get_processId()
}

class NetWorkManager{
    +void create_publisher()
    +void create_subscriber()
    +void delete_publisher()
    +void delete_subscriber()
}

class IntraProcessManager{
    +void create_publisher()
    +void create_subscriber()
    +void delete_publisher()
    +void delete_subscriber()
}

class InterProcessManager{
    +void create_publisher()
    +void create_subscriber()
    +void delete_publisher()
    +void delete_subscriber()
}

CommunicationAbstract .-up-> Util
CommunicationAbstract o-down-> SubAbstract
CommunicationAbstract o--> PubAbstract
CommunicationAbstract o-left-> ServiceAbstract
CommunicationAbstract ..right-> ServiceDiscoveryManager

PubAbstract o--> NetWorkManager
PubAbstract o--> IntraProcessManager
PubAbstract o--> InterProcessManager

SubAbstract o--> NetWorkManager
SubAbstract o--> IntraProcessManager
SubAbstract o--> InterProcessManager
